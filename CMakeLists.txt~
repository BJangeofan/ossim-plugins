project(ossim-plugins)
MESSAGE("**********************Setting up ossimplugins********************")

IF(NOT APPLE)
  cmake_minimum_required(VERSION 2.6)
ELSE(NOT APPLE)
  cmake_minimum_required(VERSION 2.8)
ENDIF(NOT APPLE)

include(OssimVersion)
include(OssimCommonVariables)
include(OssimUtilities)

############################### OVERRIDE THE DEFAULTS TO APPEND THE PLUGIN INFORMATION###################


OPTION(OSSIM_INSTALL_PLUGINS_WITH_VERSION "Set to ON to build OSSIM's plugins to install with a version prefix like ossim-<version>/plugins.  Use OFF to not add a version and make it ossim/plugins." OFF)
OPTION(BUILD_CNES_PLUGIN "Set to ON to build OSSIM's CNES that depend only on ossim.  Use OFF to skip this plugin." ON)
OPTION(BUILD_GDAL_PLUGIN "Set to ON to build OSSIM's gdal plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_GEOPDF_PLUGIN "Set to ON to build OSSIM's geopdf plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_HDF5_PLUGIN "Set to ON to build OSSIM's hdf5 plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_KAKADU_PLUGIN "Set to ON to build OSSIM's kakadu plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_KML_PLUGIN "Set to ON to build OSSIM's kml super overvlay plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_MRSID_PLUGIN "Set to ON to build OSSIM's mrsid plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_OPENCV_PLUGIN "Set to ON to build OSSIM's opencv plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_OPENJPEG_PLUGIN "Set to ON to build OSSIM's openjpeg plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_PDAL_PLUGIN "Set to ON to build OSSIM's pdal plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_PNG_PLUGIN "Set to ON to build OSSIM's png plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_SQLITE_PLUGIN "Set to ON to build OSSIM's sqlite plugin.  Use OFF to skip this plugin." OFF)
OPTION(BUILD_WEB_PLUGIN "Set to ON to build OSSIM's web plugin.  Use OFF to skip this plugin." OFF)

find_package(OpenThreads)
find_package(ossim)

IF(OSSIM_INSTALL_PLUGINS_WITH_VERSION)
  SET(INSTALL_RUNTIME_DIR   "${INSTALL_LIBRARY_DIR}/ossim-${OSSIM_VERSION}/plugins")
ELSE()
  SET(INSTALL_RUNTIME_DIR   "${INSTALL_LIBRARY_DIR}/ossim/plugins")
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${OSSIM_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OPENTHREADS_INCLUDE_DIR})

SET(BUILD__FRAMEWORKS "OFF")
SET(OSSIM_PLUGIN_LINK_TYPE "SHARED")

if(BUILD_CNES_PLUGIN)
   SUBDIRS(cnes)
ENDIF(BUILD_CNES_PLUGIN)

if(BUILD_CSM_PLUGIN)
   SUBDIRS(csm)
ENDiF(BUILD_CSM_PLUGIN)

if(BUILD_GDAL_PLUGIN)
   SUBDIRS(gdal)
ENDIF(BUILD_GDAL_PLUGIN)

if(BUILD_GEOPDF_PLUGIN)
   SUBDIRS(geopdf)
ENDIF(BUILD_GEOPDF_PLUGIN)

if(BUILD_HDF5_PLUGIN)
   SUBDIRS(hdf5)
ENDIF(BUILD_HDF5_PLUGIN)

if(BUILD_KAKADU_PLUGIN)
   SUBDIRS(kakadu)
ENDIF(BUILD_KAKADU_PLUGIN)

if(BUILD_KML_PLUGIN)
   SUBDIRS(kml)
ENDIF(BUILD_KML_PLUGIN)

IF(BUILD_MRSID_PLUGIN)
   SUBDIRS(mrsid)  
ENDIF(BUILD_MRSID_PLUGIN)

IF(BUILD_NDF_PLUGIN)
   SUBDIRS(ndf) 
ENDIF(BUILD_NDF_PLUGIN)

IF(BUILD_OPENCV_PLUGIN)
   SUBDIRS(opencv)
ENDIF(BUILD_OPENCV_PLUGIN)

IF(BUILD_OPENJPEG_PLUGIN)
   SUBDIRS(openjpeg) 
ENDIF(BUILD_OPENJPEG_PLUGIN)

IF(BUILD_PDAL_PLUGIN)
   SUBDIRS(pdal)
ENDIF(BUILD_PDAL_PLUGIN)

if(BUILD_PNG_PLUGIN)
   SUBDIRS(png)
ENDIF(BUILD_PNG_PLUGIN)

if(BUILD_SQLITE_PLUGIN)
   SUBDIRS(sqlite)
ENDIF(BUILD_SQLITE_PLUGIN)

if(BUILD_WEB_PLUGIN)
   SUBDIRS(web)
ENDIF(BUILD_WEB_PLUGIN)

IF(OSSIM_BUILD_ADDITIONAL_PLUGIN_DIRECTORIES)
    FOREACH(it IN LISTS OSSIM_BUILD_ADDITIONAL_PLUGIN_DIRECTORIES)
        SUBDIRS(${it})
    ENDFOREACH(it)
ELSE(OSSIM_BUILD_ADDITIONAL_PLUGIN_DIRECTORIES)
    SET(OSSIM_BUILD_ADDITIONAL_PLUGIN_DIRECTORIES "" CACHE PATH "Specify full paths separated by ; to additional plugins you wish to include into the ossim build framework" FORCE)
ENDIF()

MESSAGE( STATUS "BUILD__PLUGIN                 = ${BUILD__PLUGIN}" )
MESSAGE( STATUS "BUILD_CONTRIB_PLUGIN          = ${BUILD_CONTRIB_PLUGIN}" )
MESSAGE( STATUS "BUILD_CSM_PLUGIN              = ${BUILD_CSM_PLUGIN}" )
MESSAGE( STATUS "BUILD_GDAL_PLUGIN             = ${BUILD_GDAL_PLUGIN}" )
MESSAGE( STATUS "BUILD_GEOPDF_PLUGIN           = ${BUILD_GEOPDF_PLUGIN}" )
MESSAGE( STATUS "BUILD_HDF_PLUGIN              = ${BUILD_HDF_PLUGIN}" )
MESSAGE( STATUS "BUILD_HDF4_PLUGIN             = ${BUILD_HDF4_PLUGIN}" )
MESSAGE( STATUS "BUILD_HDF5_PLUGIN             = ${BUILD_HDF5_PLUGIN}" )
MESSAGE( STATUS "BUILD_KAKADU_PLUGIN           = ${BUILD_KAKADU_PLUGIN}" )
MESSAGE( STATUS "BUILD_KMLSUPEROVERLAY_PLUGIN  = ${BUILD_KMLSUPEROVERLAY_PLUGIN}" )
MESSAGE( STATUS "BUILD_LAS_PLUGIN              = ${BUILD_LAS_PLUGIN}" )
MESSAGE( STATUS "BUILD_LIBLAS_PLUGIN           = ${BUILD_LIBLAS_PLUGIN}" )
MESSAGE( STATUS "BUILD_LIBRAW_PLUGIN           = ${BUILD_LIBRAW_PLUGIN}" )
MESSAGE( STATUS "BUILD_MRSID_PLUGIN            = ${BUILD_MRSID_PLUGIN}" )
MESSAGE( STATUS "BUILD_NDF_PLUGIN              = ${BUILD_NDF_PLUGIN}" )
MESSAGE( STATUS "BUILD_OPENCV_PLUGIN           = ${BUILD_OPENCV_PLUGIN}" )
MESSAGE( STATUS "BUILD_OPENJPEG_PLUGIN         = ${BUILD_OPENJPEG_PLUGIN}" )
MESSAGE( STATUS "BUILD_PDAL_PLUGIN             = ${BUILD_PDAL_PLUGIN}" )
MESSAGE( STATUS "BUILD_PNG_PLUGIN              = ${BUILD_PNG_PLUGIN}" )
MESSAGE( STATUS "BUILD_REGISTRATION_PLUGIN     = ${BUILD_REGISTRATION_PLUGIN}" )
MESSAGE( STATUS "BUILD_SQLITE_PLUGIN           = ${BUILD_SQLITE_PLUGIN}" )
MESSAGE( STATUS "BUILD_WEB_PLUGIN              = ${BUILD_WEB_PLUGIN}" )
MESSAGE( STATUS "OPENTHREADS_LIBRARY                = ${OPENTHREADS_LIBRARY}" )
MESSAGE( STATUS "OPENTHREADS_INCLUDE                = ${OPENTHREADS_INCLUDE_DIR}" )
MESSAGE( STATUS "OSSIM_LIBRARY                      = ${OSSIM_LIBRARY}" )
MESSAGE( STATUS "OSSIM_INCLUDE                      = ${OSSIM_INCLUDE_DIR}" )
MESSAGE( STATUS "OSSIM_INSTALL_PLUGINS_WITH_VERSION = ${OSSIM_INSTALL_PLUGINS_WITH_VERSION}" )

OSSIM_ADD_COMMON_MAKE_UNINSTALL()
